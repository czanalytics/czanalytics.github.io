module kb.

kb(Freight) => Freight = [meal,groceries,person,pallet,container,car,truck,steel,special_freight].

kb(Carrier) => Carrier = [courier,scooter,bike,taxi,car,bus,truck,car_carrier,train,ship,airplaine, special_transport].

m(meal, [courier]).
m(person, [scooter,bike,taxi,car,bus,train,ship,airplane]).
m(pallet, [truck]).
m(container, [truck,train,ship]).
m(car, [car_carrier,train,ship]).
m(truck, [train,ship]).
m(special_freight, [special_transport]).


% car(Model,L,W,H)
% dimensions rounded to higher value with 0.1 m tolerance.
car(opel_corsa   , 4.1, 1.8, 1.5).
car(peugeot_308  , 4.3, 1.8, 1.5).
car(peugeot_3008 , 4.5, 1.8, 1.7).
car(toyota_proace, 5.0, 1.8, 1.9).
car(toyota_yaris , 4.0, 1.8, 1.6).
car(toyota_c_hr  , 4.4, 1.8, 1.6).
car(bmw_serie_4  , 4.8, 1.8, 1.4).
car(citroen_c4   , 4.5, 1.8, 1.7).

%Car carrier cc(Name,MaxWeight, Slots) with slotname(L,H,loc(X,Y,Angle))
cc(carrier1,1000,[slot1(4.5,1.5,loc(3,1,0))]).
cc(carrier2,2000,[slot1(4.5,1.5,loc(3,3,0)), slot2(4.5,1.5,loc(3,1,0))]).
cc(carrier3,3000,[slot1(4.5,1.5,loc(3,3,0)), slot2(4.5,1.5,loc(3,1,0)), slot3(5.0,2.0,loc(5,1,3))]).
cc(carrier6,6000,[slot1(4.5,1.5,loc(3.3,0)), slot2(4.5,1.5,loc(3,1,0)), slot3(5.0,2.0,loc(5,1,3)),
                  slot4(4.5,1.5,loc(8,3,0)), slot5(4.5,1.5,loc(8,1,0)), slot6(5.0,2.0,loc(12,1,0))]).

cars =>
 car(Model,Lc,_,Hc),
 writef("\n %w %w %w",Model,Lc,Hc).

carriers =>
 cc(Carrier,KgMax,Slots),
 writef("\n %w %w %w",Carrier,KgMax,Slots).

kbcar ?=> cars, fail.
kbcar => println(" ok").
kbcc ?=> carriers, fail.
kbcc => println(" ok").


% unique slots & cars
% slot2(carrier1) > false
% slot2(carrier2) > true
slot2(Carrier) =>
        cc(Carrier,_,Ss),
        %cc(carrier2,_,Ss),
        member(S1,Ss),
        member(S2,Ss),
        S1 != S2,
        writef("\n %w %w",S1,S2).


slot(Carrier,Sl) =>
        cc(Carrier,_,Slots),
        member(Sl,Slots).

dim(Carrier,Slot,L,H,Loc)  =>
  slot(Carrier,Sl),
  Sl =.. S,
  Slot = S[1],
  L = S[2],
  H = S[3],
  Loc = S[4].

match(Carrier,Model) =>
 dim(Carrier,Sl,L,H,Loc),
 car(Model,Lc,_,Hc),
 Lc =< L,
 Hc =< H,
 writef("\n %w %w %w/%w %w: %w %w/%w",Carrier,Sl,L,H,Loc, Model,Lc,Hc),
 fail.

% cabin 2-4 + 4-7
% Lg
% vans 2+4 Renault Kangoo L1 <4.5 (4321) L2 <5.0 (4705) W <1.5 H<1.9
% above-cabin (1), behind-cabin (2-3), trailer-top 2-3, trailer-bottom 3-4
% behid cabin: bottom 1+ tilt + top OR bottom + top+ tilt
% trailer-bottom: 3 or 2 + tilt 1-2
% top row 2 x <5.0
% low roe 3x4.6  or 2*4.4+4.9
% Carrier H<4.5  L 21.7
% Cabin height <3.2

% Length ~4.5 [3.4,5.3] Width ~1.8 [1.6,2.2] Height ~1.5 [1.4,2.0]
% Twizy L 2.4 W 1.2 H 1.4
% Rolls L <6.0 W <2.2 H<1.7
% Vans L ~5 [3.8,7.4], W ~1.2 [,], H ~2.0 [1.7,2.9]

